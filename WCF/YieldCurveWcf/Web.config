<?xml version="1.0"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<!-- to support custom appSettingsCustom section -->
		<section name="appSettingsCustom" type="System.Configuration.NameValueSectionHandler" />
	</configSections>

	<!--
	<appSettingsCustom configProtectionProvider="DataProtectionConfigurationProvider">
		<add key="AdminEmailName" value="test" />
		<add key="AdminEmailPass" value="test" />
	</appSettingsCustom>
	-->
	
	<appSettingsCustom>
		<add key="AdminEmailName" value="xxx@gmail.com" />
		<add key="AdminEmailPass" value="xx" />
 </appSettingsCustom>
 <connectionStrings>
		<!--
		<add name="DublinSql" connectionString="server=localhost;user=qlc;database=fincurve_qlc12;password=qlc;"/>
		-->
		<add name="MySqlTest" connectionString="server=localhost;user=qlc;database=qlc;password=qlc;"/>
	</connectionStrings>
	<system.web>
		<!--
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true" targetFramework="4.0">
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  
  </system.web>
	
  <!--
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
	
  <system.serviceModel>

		<!--<serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />-->
		
		<serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
		
		<services>
			<service behaviorConfiguration="YieldCurveWcf.YieldCurveSrvBehavior" name="YieldCurveWcf.YieldCurveSrv">
				<endpoint address="" binding="basicHttpBinding" contract="YieldCurveWcf.IYieldCurveSrv">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
		</services>
		
		<behaviors>
			<serviceBehaviors>
				<behavior name="YieldCurveWcf.YieldCurveSrvBehavior">
					<!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
					<serviceMetadata httpGetEnabled="true"/>
					<!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
					<serviceDebug includeExceptionDetailInFaults="true"/>
					<!--
					<serviceCredentials>
						<serviceCertificate findValue="localhost" x509FindType="FindBySubjectName"
															storeLocation="LocalMachine" storeName="My" />
						<userNameAuthentication userNamePasswordValidationMode="Custom"
															customUserNamePasswordValidatorType="UserAccounts.CustomValidator, UserAccounts" />
					</serviceCredentials>
					-->
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<!--
		<bindings>
			<wsHttpBinding>
				<binding>
					<security mode="Message">
						<message clientCredentialType="UserName"/>
					</security>
				</binding>
			</wsHttpBinding>
		</bindings>
		-->
	</system.serviceModel>
	
	
	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
				<listeners>
					<add name="traceListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="d:\Tmp\WEBTraces.log"/>
				</listeners>
			</source>
		</sources>
	</system.diagnostics>
</configuration>
